{"version":3,"sources":["wires-metal.js"],"names":[],"mappings":"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","file":"wires-metal.js","sourcesContent":["import * as _ from 'lodash';\n\n/**\n * @module Metal\n */\nvar Metal = {};\n\n/**\n * Wraps the passed method so that `this._super` will point to the superMethod\n * when the method is invoked.\n *\n * @private\n * @method wrap\n * @param {Function} method - The method to call.\n * @param {Function} superMeqthod - The super method.\n * @return {Function} - wrapped function.\n */\nfunction _wrap(method, superMethod) {\n  return function() {\n    var prevSuper = this._super;\n    this._super = superMethod;\n    var ret = method.apply(this, arguments);\n    this._super = prevSuper;\n    return ret;\n  };\n}\n\n/**\n * A reference to safe regex for checking if a function calls `_super`.\n *\n * @private\n * @const {RegExp}\n */\nconst CONTAINS_SUPER = (/xyz/.test(new Function('xyz'))) ? /\\b_super\\b/ : /.*/;\n\n/**\n * Assigns properties of source object to destination object, wrapping methods\n * that call their super method.\n *\n * @private\n * @method wrapAll\n * @param {Object} dest - The destination object.\n * @param {Object} source - The source object.\n */\nfunction _wrapAll(dest, source) {\n  var keys = _.keys(source),\n      length = keys.length,\n      i, name, method, superMethod, hasSuper;\n\n  for (i = 0; i < length; i++) {\n    name = keys[i];\n    method = source[name];\n    superMethod = dest[name];\n\n    // Test if new method calls `_super`\n    hasSuper = CONTAINS_SUPER.test(method);\n\n    // Only wrap the new method if the original method was a function and the\n    // new method calls `_super`.\n    if (hasSuper && _.isFunction(method) && _.isFunction(superMethod)) {\n      dest[name] = _wrap(method, superMethod);\n\n    // Otherwise just add the new method or property to the object.\n    } else {\n      dest[name] = method;\n    }\n  }\n}\n\n/**\n * Creates a new Class.\n *\n * ```js\n * var MyClass = Class.extend({\n *   initialize() {\n *     console.log('Created!');\n *   }\n * });\n *\n * new MyClass();\n * // >> Created!\n * ```\n *\n * @public\n * @class Class\n * @memberOf Metal\n */\nvar Class = Metal.Class = function() {\n  this.initialize(...arguments);\n};\n\n/**\n * An overridable method called when objects are instantiated. Does not do\n * anything by default.\n *\n * @public\n * @abstract\n * @method initialize\n */\nClass.prototype.initialize = _.noop;\n\n_.assign(Class, {\n\n  /**\n   * Creates a new subclass.\n   *\n   * ```js\n   * var MyClass = Class.extend({\n   *   // ...\n   * });\n   *\n   * var myClass = new MyClass();\n   * myClass instanceof MyClass\n   * // true\n   * myClass instanceof Class\n   * // true\n   * ```\n   *\n   * @public\n   * @static\n   * @method extend\n   * @param {Object} [protoProps] - The properties to be added to the prototype.\n   * @param {Object} [staticProps] - The properties to be added to the constructor.\n   */\n  extend(protoProps, staticProps) {\n    var Parent = this;\n    var Child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (!protoProps || !_.has(protoProps, 'constructor')) {\n      Child = function() { Parent.apply(this, arguments); };\n    } else if (CONTAINS_SUPER.test(protoProps.constructor)) {\n      Child = _wrap(protoProps.constructor, Parent.prototype.constructor);\n    } else {\n      Child = protoProps.constructor;\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.assign(Child, Parent);\n    if (staticProps) {\n      _wrapAll(Child, staticProps);\n    }\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function() { this.constructor = Child; };\n    Surrogate.prototype = Parent.prototype;\n    Child.prototype = new Surrogate();\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) {\n      _wrapAll(Child.prototype, protoProps);\n    }\n\n    // Set a convenience property in case the parent class is needed later.\n    Child.superclass = Parent;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    Child.__super__ = Parent.prototype;\n\n    return Child;\n  },\n\n  /**\n   * Mixes properties onto the class's prototype.\n   *\n   * ```js\n   * var MyMixin = new Mixin({\n   *   alert() {\n   *     console.log('Alert!');\n   *   }\n   * });\n   *\n   * var MyClass = Class.extend({\n   *   initialize() {\n   *     this.alert();\n   *   }\n   * });\n   *\n   * MyClass.mixin(MyMixin);\n   *\n   * new MyClass();\n   * // >> Alert!\n   * ```\n   *\n   * @public\n   * @static\n   * @method mixin\n   * @param {Object} protoProps - The properties to be added to the prototype.\n   * @return {Class} - The class.\n   */\n  mixin(protoProps) {\n    // Add prototype properties (instance properties) to the class, if supplied.\n    _wrapAll(this.prototype, protoProps);\n    return this;\n  },\n\n  /**\n   * Mixes properties onto the class's constructor.\n   *\n   * ```js\n   * var MyMixin = new Mixin({\n   *   alert() {\n   *     console.log('Alert!');\n   *   }\n   * });\n   *\n   * var MyClass = Class.extend(...);\n   *\n   * MyClass.include(MyMixin);\n   *\n   * MyClass.alert();\n   * // >> Alert!\n   * ```\n   *\n   * You can also simply pass a plain javascript object.\n   *\n   * ```js\n   * var MyClass = Class.extend(...);\n   *\n   * MyClass.include({\n   *   alert() {\n   *     console.log('Alert!');\n   *   }\n   * });\n   *\n   * MyClass.alert();\n   * // >> Alert!\n   * ```\n   *\n   * @public\n   * @static\n   * @method mixin\n   * @param {Object} staticProps - The properties to be added to the constructor.\n   * @return {Class} - The class.\n   */\n  include(staticProps) {\n    // Add static properties to the constructor function, if supplied.\n    _wrapAll(this, staticProps);\n    return this;\n  },\n\n  /**\n   * Checks if `value` is a Metal Class.\n   *\n   * ```js\n   * _.isClass(Class.extend(...));\n   * // >> true\n   * _.isClass(new Class());\n   * // >> true\n   * _.isClass(function() {...});\n   * // >> false\n   * _.isClass({...});\n   * // >> false\n   * ```\n   * @public\n   * @method isClass\n   * @memberOf _\n   * @param {*} value - The value to check.\n   */\n  isClass(value) {\n    return !!value && (\n      value instanceof Class ||\n      value.prototype instanceof Class ||\n      value === Class\n    );\n  }\n});\n\n/**\n * Allows you to create mixins, whose properties can be added to other classes.\n *\n * @public\n * @class Mixin\n * @memberOf Metal\n * @param {Object} protoProps - The properties to be added to the prototype.\n */\nvar Mixin = Metal.Mixin = function(protoProps) {\n  // Add prototype properties (instance properties) to the class, if supplied.\n  _.assign(this, protoProps);\n};\n\n/**\n * Checks if `value` is a Metal Mixin.\n *\n * ```js\n * _.isMixin(new Mixin());\n * // >> true\n * _.isMixin({});\n * // >> false\n * _.isMixin(function() {...});\n * // >> false\n * _.isMixin(new Class());\n * // >> false\n * ```\n *\n * @public\n * @method isMixin\n * @memberOf _\n * @param {*} value - The value to check.\n */\nMixin.isMixin = function(value) {\n  return !!value && value instanceof Mixin;\n};\n\n/**\n * @private\n * @const {String[]}\n */\nconst ERROR_PROPS = [\n  'description', 'fileName', 'lineNumber', 'name', 'message', 'number'\n];\n\n/**\n * A subclass of the JavaScript Error.\n *\n * ```js\n * throw new Metal.Error('Oh you\\'ve really done it now...');\n * // Uncaught Metal.Error: Oh you've really done it now...\n * //   [stack trace]\n * ```\n *\n * @class Error\n * @memberOf Metal\n * @extends Error\n * @uses Metal.Class\n */\nvar Err = Metal.Error = Class.extend.call(Error, {\n\n  /**\n   * @public\n   * @constructs Error\n   * @param {String} [message] - A description of the error.\n   * @param {Object} [options] - Settings for the error.\n   * @param {String} [options.message] - A description of the error.\n   */\n  constructor(message, options = {}) {\n    // If options are provided in place of a message, assume message exists on\n    // options.\n    if (_.isObject(message)) {\n      options = message;\n      message = options.message;\n    }\n\n    // Create a fake error with message in order to capture a stack trace.\n    var error = Error.call(this, message);\n\n    // Copy over all the error-related properties.\n    _.assign(this, _.pick(error, ERROR_PROPS), _.pick(options, ERROR_PROPS));\n\n    // Adds a `stack` property to the given error object that will yield the\n    // stack trace at the time captureStackTrace was called.\n    // When collecting the stack trace all frames above the topmost call\n    // to this function, including that call, will be left out of the\n    // stack trace.\n    // This is useful because we can hide Metal implementation details\n    // that are not very helpful for the user.\n    Err.captureStackTrace(this, Err);\n  },\n\n  /**\n   * Formats the error message to display in the console.\n   *\n   * @public\n   * @method toString\n   * @returns {String} - Formatted error message.\n   */\n  toString() {\n    return `${this.name}: ${this.message}`;\n  }\n}, {\n\n  /**\n   * A safe reference to V8's `Error.captureStackTrace`.\n   *\n   * @public\n   * @method captureStackTrace\n   */\n  captureStackTrace(target, method) {\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(target, method);\n    }\n  }\n});\n\n/**\n * @class Error\n * @mixes Class\n */\n_.assign(Err, Class);\n\n/**\n * Display a deprecation warning with the provided message.\n *\n * @public\n * @method deprecate\n * @param {String|Object} message - A description of the deprecation.\n * @param {String} message.prev - The deprecated item.\n * @param {String} message.next - The replacement for the deprecated item.\n * @param {Boolean} [test] - An optional boolean. If falsy, the deprecation will be displayed.\n */\nvar deprecate = Metal.deprecate = function(message, test) {\n\n  // Returns if test is provided and is falsy.\n  if (test !== undefined && test) {\n    return;\n  }\n\n  // If message is provided as an object, format the object into a string.\n  if (_.isObject(message)) {\n    message = deprecate._format(message.prev, message.next);\n  }\n\n  // Ensure that message is a string\n  message = message && message.toString();\n\n  // If deprecation message has not already been warned, send the warning.\n  if (!deprecate._cache[message]) {\n    deprecate._warn(`Deprecation warning: ${message}`);\n    deprecate._cache[message] = true;\n  }\n};\n\n/**\n * Format a message for deprecate.\n *\n * @private\n * @method _format\n * @memberOf deprecate\n * @param {String} prev - The deprecated item.\n * @param {String} next - The replacement for the deprecated item.\n * @return {String} - The formatted message.\n */\ndeprecate._format = function(prev, next) {\n  return `${prev} is going to be removed in the future. Please use ${next} instead.`;\n};\n\n/**\n * A safe reference to `console.warn` that will fallback to `console.log` or\n * `_noop` if the `console` object does not exist.\n *\n * @private\n * @method _warn\n * @memberOf deprecate\n * @param {*...} - The values to warn in the console.\n */\ndeprecate._warn = typeof console !== 'undefined' && (console.warn || console.log) || _.noop;\n\n/**\n * An internal cache to avoid sending the same deprecation warning multiple\n * times.\n *\n * @private\n * @property _cache\n * @memberOf deprecate\n */\ndeprecate._cache = {};\n\nexport default Metal;\n"],"sourceRoot":"/source/"}